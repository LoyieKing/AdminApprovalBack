// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(AabDbContext))]
    [Migration("20210327062230_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("Data.Entity.SystemManage.AreaEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("F_CreatorTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_CreatorUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("F_DeleteMark")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("F_DeleteTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_DeleteUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_Description")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_EnCode")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("F_EnabledMark")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("F_FullName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("F_LastModifyTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_LastModifyUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("F_Layers")
                        .HasColumnType("int");

                    b.Property<string>("F_ParentId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_SimpleSpelling")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("F_SortCode")
                        .HasColumnType("int");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_Area");
                });

            modelBuilder.Entity("Data.Entity.SystemManage.ItemsDetailEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("F_CreatorTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_CreatorUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("F_DeleteMark")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("F_DeleteTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_DeleteUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_Description")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("F_EnabledMark")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("F_IsDefault")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("F_ItemCode")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_ItemId")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("F_ItemName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("F_LastModifyTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_LastModifyUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("F_Layers")
                        .HasColumnType("int");

                    b.Property<string>("F_ParentId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_SimpleSpelling")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("F_SortCode")
                        .HasColumnType("int");

                    b.HasKey("F_Id");

                    b.HasIndex("F_ItemId")
                        .IsUnique();

                    b.ToTable("Sys_ItemsDetail");
                });

            modelBuilder.Entity("Data.Entity.SystemManage.ItemsEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("F_CreatorTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_CreatorUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("F_DeleteMark")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("F_DeleteTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_DeleteUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_Description")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_EnCode")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("F_EnabledMark")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("F_FullName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("F_IsTree")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("F_LastModifyTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_LastModifyUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("F_Layers")
                        .HasColumnType("int");

                    b.Property<string>("F_ParentId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("F_SortCode")
                        .HasColumnType("int");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_Items");
                });

            modelBuilder.Entity("Data.Entity.SystemManage.ModuleButtonEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<bool?>("F_AllowDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("F_AllowEdit")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("F_CreatorTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_CreatorUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("F_DeleteMark")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("F_DeleteTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_DeleteUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_Description")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_EnCode")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("F_EnabledMark")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("F_FullName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_Icon")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("F_IsPublic")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("F_JsEvent")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("F_LastModifyTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_LastModifyUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("F_Layers")
                        .HasColumnType("int");

                    b.Property<int?>("F_Location")
                        .HasColumnType("int");

                    b.Property<string>("F_ModuleId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_ParentId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("F_SortCode")
                        .HasColumnType("int");

                    b.Property<bool?>("F_Split")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("F_UrlAddress")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_ModuleButton");
                });

            modelBuilder.Entity("Data.Entity.SystemManage.ModuleEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<bool?>("F_AllowDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("F_AllowEdit")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("F_CreatorTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_CreatorUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("F_DeleteMark")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("F_DeleteTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_DeleteUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_Description")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_EnCode")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("F_EnabledMark")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("F_FullName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_Icon")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("F_IsExpand")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("F_IsMenu")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("F_IsPublic")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("F_LastModifyTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_LastModifyUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("F_Layers")
                        .HasColumnType("int");

                    b.Property<string>("F_ParentId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("F_SortCode")
                        .HasColumnType("int");

                    b.Property<string>("F_Target")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_UrlAddress")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_Module");
                });

            modelBuilder.Entity("Data.Entity.SystemManage.OrganizeEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("F_Address")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("F_AllowDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("F_AllowEdit")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("F_AreaId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_CategoryId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("F_CreatorTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_CreatorUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("F_DeleteMark")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("F_DeleteTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_DeleteUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_Description")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_Email")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_EnCode")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("F_EnabledMark")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("F_Fax")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_FullName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("F_LastModifyTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_LastModifyUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("F_Layers")
                        .HasColumnType("int");

                    b.Property<string>("F_ManagerId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_MobilePhone")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_ParentId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_ShortName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("F_SortCode")
                        .HasColumnType("int");

                    b.Property<string>("F_TelePhone")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_WeChat")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_Organize");
                });

            modelBuilder.Entity("Data.Entity.SystemManage.RoleAuthorizeEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("F_CreatorTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_CreatorUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("F_DeleteMark")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("F_DeleteTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_DeleteUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_ItemId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("F_ItemType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("F_LastModifyTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_LastModifyUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_ObjectId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("F_ObjectType")
                        .HasColumnType("int");

                    b.Property<int?>("F_SortCode")
                        .HasColumnType("int");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_RoleAuthorize");
                });

            modelBuilder.Entity("Data.Entity.SystemManage.RoleEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<bool?>("F_AllowDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("F_AllowEdit")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("F_Category")
                        .HasColumnType("int");

                    b.Property<DateTime?>("F_CreatorTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_CreatorUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("F_DeleteMark")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("F_DeleteTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_DeleteUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_Description")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_EnCode")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("F_EnabledMark")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("F_FullName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("F_LastModifyTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_LastModifyUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_OrganizeId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("F_SortCode")
                        .HasColumnType("int");

                    b.Property<string>("F_Type")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_Role");
                });

            modelBuilder.Entity("Data.Entity.SystemManage.UserEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("F_Account")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("F_Birthday")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("F_CreatorTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_CreatorUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("F_DeleteMark")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("F_DeleteTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_DeleteUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_DepartmentId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_Description")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_DutyId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_Email")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("F_EnabledMark")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("F_Gender")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("F_HeadIcon")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("F_IsAdministrator")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("F_LastModifyTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_LastModifyUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_ManagerId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_MobilePhone")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_NickName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_OrganizeId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_RealName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_RoleId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("F_SecurityLevel")
                        .HasColumnType("int");

                    b.Property<string>("F_Signature")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("F_SortCode")
                        .HasColumnType("int");

                    b.Property<string>("F_WeChat")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_User");
                });

            modelBuilder.Entity("Data.Entity.SystemManage.UserLogOnEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("F_AllowEndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("F_AllowStartTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_AnswerQuestion")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("F_ChangePasswordDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("F_CheckIPAddress")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("F_CreatorTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_CreatorUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("F_DeleteMark")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("F_DeleteTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_DeleteUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("F_FirstVisitTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_Language")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("F_LastModifyTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_LastModifyUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("F_LastVisitTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("F_LockEndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("F_LockStartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("F_MultiUserLogin")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("F_PreviousVisitTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_Question")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_Theme")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_UserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("F_UserOnLine")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("F_UserPassword")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_UserSecretkey")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_UserLogOn");
                });

            modelBuilder.Entity("Data.Entity.SystemSecurity.DbBackupEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("F_BackupTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_BackupType")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("F_CreatorTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_CreatorUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_DbName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("F_DeleteMark")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("F_DeleteTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_DeleteUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_Description")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("F_EnabledMark")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("F_FileName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_FilePath")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_FileSize")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("F_LastModifyTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_LastModifyUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("F_SortCode")
                        .HasColumnType("int");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_DbBackup");
                });

            modelBuilder.Entity("Data.Entity.SystemSecurity.FilterIPEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("F_CreatorTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_CreatorUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("F_DeleteMark")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("F_DeleteTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_DeleteUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_Description")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("F_EnabledMark")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("F_EndIP")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("F_LastModifyTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_LastModifyUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("F_SortCode")
                        .HasColumnType("int");

                    b.Property<string>("F_StartIP")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("F_Type")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_FilterIP");
                });

            modelBuilder.Entity("Data.Entity.SystemSecurity.LogEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("F_Account")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("F_CreatorTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_CreatorUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("F_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("F_DeleteMark")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("F_DeleteTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_DeleteUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_Description")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_IPAddress")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("F_LastModifyTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("F_LastModifyUserId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_ModuleId")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_ModuleName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_NickName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("F_Result")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("F_Type")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_Log");
                });

            modelBuilder.Entity("Data.Entity.SystemManage.ItemsDetailEntity", b =>
                {
                    b.HasOne("Data.Entity.SystemManage.ItemsEntity", "Item")
                        .WithOne()
                        .HasForeignKey("Data.Entity.SystemManage.ItemsDetailEntity", "F_ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });
#pragma warning restore 612, 618
        }
    }
}
